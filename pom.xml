<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.tx</groupId>
		<artifactId>tx-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>webdemo</artifactId>
	<packaging>war</packaging>
	<name>webdemo</name>
	<url>http://maven.apache.org</url>

	<dependencies>
		<dependency>
			<groupId>com.tx</groupId>
			<artifactId>tx-core</artifactId>
		</dependency>

		<!-- commons -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-jxpath</groupId>
			<artifactId>commons-jxpath</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-vfs2</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>

		<!-- db connnetct pool -->
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
		</dependency>

		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
		</dependency>

		<!-- CXF -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
		</dependency>

		<!-- xfire -->

		<!-- ajax -->

		<!-- json xml -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
		</dependency>

		<!-- dom4j -->
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- aop -->
		<dependency>
			<!-- aop联盟制定的aop规范 -->
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
		</dependency>
		<dependency>
			<!-- aop aspectj实现 -->
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<!-- aop aspectj实现 -->
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
		</dependency>

		<!-- hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>

		<!-- mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-ehcache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
		</dependency>

		<!-- p6spy -->
		<dependency>
			<groupId>p6spy</groupId>
			<artifactId>p6spy</artifactId>
		</dependency>

		<!-- cache -->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
		</dependency>

		<!-- quartz -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz-oracle</artifactId>
		</dependency>

		<!-- log -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>

		<!-- Taglibs -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<!-- jstl的类库，包含TLD 和标记句柄。 -->
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- jdbc -->
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<!-- struts -->
		<dependency>
			<!-- struts2的核心包 -->
			<!-- freemarker.jar:FreeMarker是一个模板引擎，一个基于模板生成文本输出的通用工具 -->
			<!-- ognl.jar:支持ognl表达式 -->
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-core</artifactId>
		</dependency>
		<dependency>
			<!-- xwork的包 由于Struts2是由xwork的延伸 有些类依然关联着 xwork的类 -->
			<groupId>org.apache.struts.xwork</groupId>
			<artifactId>xwork-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-spring-plugin</artifactId>
		</dependency>
		<dependency>
			<groupId>ognl</groupId>
			<artifactId>ognl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
		</dependency>

		<!-- junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-mock</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- 编译 -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<!-- The -source argument for the Java compiler.Default value is: 1.5. -->
					<source>1.6</source>
					<!-- The -target argument for the Java compiler.Default value is: 1.5. -->
					<target>1.6</target>
					<!-- The -encoding argument for the Java compiler.Default value is: 
						${project.build.sourceEncoding}. -->
					<encoding>UTF-8</encoding>
					<!-- Set to true to show compilation warnings. Default value is: false. -->
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>
			<!-- 生成war包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<!-- The directory for the generated WAR. -->
					<!-- Default value is: ${project.build.directory}. -->
					<outputDirectory>${basedir}/target/war</outputDirectory>
					<!-- The name of the generated WAR. -->
					<!-- Default value is: ${project.build.finalName}. -->
					<warName>webdemo</warName>
					<!-- Single directory for extra files to include in the WAR. This is 
						where you place your JSP files. -->
					<!-- Default value is: ${basedir}/src/main/webapp. -->
					<warSourceDirectory>${basedir}/src/main/webapp</warSourceDirectory>
					<!-- The directory where the webapp is built. -->
					<!-- Default value is: ${project.build.directory}/${project.build.finalName}. -->
					<webappDirectory>${basedir}/target/war/webapp</webappDirectory>
					<!--Directory to unpack dependent WARs into if needed. -->
					<!--Default value is: ${project.build.directory}/war/work. -->
					<workDirectory>${basedir}/target/war/work</workDirectory>
					<!-- The archive configuration to use -->
					<archive>
						<!-- Maven 打包 jar 、war 文件时，不将 pom.xml 等打包进包中 -->
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
					<packagingExcludes>
						**/jquery-ui/development-bundle/**,
						**/operamasks/development-bundle/**,
						**/spy.properties
					</packagingExcludes>
					<!-- The comma separated list of tokens to exclude when copying the 
						content of the warSourceDirectory. -->
					<warSourceExcludes>
						**/jquery-ui/development-bundle/**,
						**/operamasks/development-bundle/**,
						**/spy.properties
					</warSourceExcludes>
					<!-- The path to the web.xml file to use. -->
					<!-- User property is: maven.war.webxml. -->
					<webXml>${basedir}/src/main/webapp/WEB-INF/web.xml</webXml>
					<webResources>
						<resource>
							<directory>${basedir}/src/main/webapp/WEB-INF</directory>
							<filtering>false</filtering>
							<targetPath>WEB-INF</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project>
