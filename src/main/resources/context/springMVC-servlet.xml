<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="  
       http://www.springframework.org/schema/beans  
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context  
       http://www.springframework.org/schema/context/spring-context-3.1.xsd    
       http://www.springframework.org/schema/mvc  
       http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<!-- 当在web.xml 中 DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 
		defaultServlet在不同服务器中不太相同 -->
	<!-- 补充说明：多个HandlerMapping的执行顺序问题： DefaultAnnotationHandlerMapping的order属性值是：0 
		<mvc:resources/ >自动注册的 SimpleUrlHandlerMapping的order属性值是： 2147483646 <mvc:default-servlet-handler/>自动注册 
		的SimpleUrlHandlerMapping 的order属性值是： 2147483647 HandlerMapping转到org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler处理 -->
	<!-- 
	静态资源映射 
	<mvc:resources mapping="/images/**" location="/resources/images/"
		cache-period="31556926" />
	<mvc:resources mapping="/jquery-ui/**" location="/resources/jquery-ui/"
		cache-period="31556926" />
	<mvc:resources mapping="/wijmo/**" location="/resources/wijmo/"
		cache-period="31556926" />
	<mvc:resources mapping="/bootstrap/**" location="/resources/bootstrap/"
		cache-period="31556926" />
	<mvc:resources mapping="/components/**" location="/resources/components/"
		cache-period="1"/>
	<mvc:resources mapping="/css/**" location="/resources/css/" />
	<mvc:resources mapping="/js/**" location="/resources/js/" />
	-->
	<!-- <mvc:default-servlet-handler /> -->
	<mvc:resources mapping="/view/js/**" location="/resources/js/" />

	<!-- 需要添加该驱动，支持多个convertor的添加 -->
	<!-- 
	<mvc:annotation-driven />
	 -->
	<!-- 配置扫描 -->
	<context:component-scan base-package="com.tx.webdemo,com.tx.component.mainframe,com.tx.component.operator"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!--添加拦截器，类级别的处理器映射 -->
	<mvc:interceptors>
		<bean class="com.tx.core.springmvc.interceptor.ExceptionLoggerInterceptor"></bean>
		<!-- 向request写入contextPath常量 -->
		<bean class="com.tx.core.springmvc.interceptor.RequestInjectAttributeInterceptor" />
		<!-- 加入权限容器支持 -->
		<bean class="com.tx.component.auth.springmvc.AuthContextSupportInterceptor"></bean>
	</mvc:interceptors>

	<!-- 将jsp映射为controller -->
	<!-- 为方便权限控制，限制jsp直接访问  -->
	<!-- 属性转换器 -->
	<!-- 属性转换器 -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<!-- request to object -->
				<bean class="org.springframework.core.convert.support.StringToBooleanConverter"></bean>
				<bean class="org.springframework.core.convert.support.StringToCharacterConverter"></bean>
				<bean class="org.springframework.core.convert.support.StringToNumberConverterFactory"></bean>
				<bean class="org.springframework.core.convert.support.StringToEnumConverterFactory"></bean>
				<!-- <bean class="org.springframework.core.convert.support.StringToArrayConverter"></bean> -->
				<!-- <bean class="org.springframework.core.convert.support.StringToCollectionConverter"></bean> -->
				<!-- <bean class="org.springframework.core.convert.support.StringToPropertiesConverter"></bean> -->

				<!-- object to string -->
				<!-- <bean class="org.springframework.core.convert.support.EnumToStringConverter"></bean> -->
				<bean class="org.springframework.core.convert.support.ObjectToStringConverter"></bean>

				<!-- <bean class="org.springframework.core.convert.support.PropertiesToStringConverter"></bean> -->
				
				<!-- other -->
				<!-- <bean class="org.springframework.core.convert.support.CharacterToNumberFactory"></bean> -->
				<!-- <bean class="org.springframework.core.convert.support.NumberToNumberConverterFactory"></bean> -->
				<!-- <bean class="org.springframework.core.convert.support.NumberToCharacterConverter"></bean> -->
				
				<!-- customize -->
				<bean class="com.tx.core.springmvc.support.StringToDateConverter"></bean>
			</list>
		</property>
	</bean>
	<!-- 注册属性转换以及验证功能 -->
	<bean id="webBindingInitializer"
		class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
		<property name="validator">
			<bean id="validator"
				class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
		</property>
		<property name="conversionService">
			<ref bean="conversionService"/>
		</property>
	</bean>
	
	<!-- 将类及方法映射controller -->
	<bean id="requestMappingHandlerMapping"
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="interceptors">
			<list>
				<bean class="com.tx.core.springmvc.interceptor.ExceptionLoggerInterceptor"></bean>
				<bean class="com.tx.core.springmvc.interceptor.RequestInjectAttributeInterceptor" />
				<bean class="com.tx.component.auth.springmvc.AuthContextSupportInterceptor"/>
			</list>
		</property>
	</bean>
	<bean id="requestMappingHandlerAdapter"
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="webBindingInitializer">
			<ref bean="webBindingInitializer"/>
		</property>
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"></bean>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"></bean>
				<bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter"></bean>
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				</bean>
				<bean class="org.springframework.http.converter.FormHttpMessageConverter"></bean>
			</list>
		</property>
	</bean>

	<!-- 支持文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- max size 5M -->
		<property name="maxUploadSize" value="5000000" />
	</bean>

	<!-- 异常处理 -->
	<bean id="exceptionResolver"
		class="com.tx.core.springmvc.exceptionresolver.SimpleHandlerExceptionResolver">
		<property name="defaultErrorView">
			<value>errorPages/error</value>
		</property>
		<property name="defaultStatusCode">
			<value>500</value>
		</property>
		<property name="warnLogCategory">
			<value>org.springframework.web.servlet.handler.simplemappingexceptionresolver
			</value>
		</property>
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">errorPages/maxUploadExceeded</prop>
				<prop key="com.boda.core.exception.HttpSessionFailureException">errorPages/sessionFailureError</prop>
			</props>
		</property>
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
</beans>